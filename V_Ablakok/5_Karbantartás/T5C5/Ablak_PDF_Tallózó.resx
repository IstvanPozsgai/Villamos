<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAGySyABsktwAbJLkAGyS+ABskwQAbJMQAGyTFABskygAbJMsAGyTMABskzQAbJM4AGyTRABsk
        0wAcJM8AHCTQABwk0QAcJNIAHCTTABwk1AAcJNUAHCTWABwk1wAcJNgAHCTZABwk2gAcJbYAHCXAABwl
        wwAcJcUAHCXHABwlyQAcJcoAHCXLABwlzAAcJc0AHCXOAB0mwQAkLbQAJMCCACfAfgAovXYAKjLIACoz
        tQAsNLUALja0AC+sRgAxObQAMjq2ADKtRgA0mQoANT22ADWSAAA1niMANackADaFAAA2iwAANr12ADbA
        fQA4hwEAOowFAD2RAAA/R8sAQrRcAESUEgBHxokASE/WAElP2wBJT9wASU/dAElP3gBJUNgASbhnAEpR
        ugBLUroATKIiAEykKwBMsE0ATs6aAFFYvABRqTwAVVvVAFXGiABboy4AW7VXAFu7ZwBcrTwAXK5CAFyx
        TABdpDEAXaoyAF2wRwBdwHQAY8F5AGdtwQBnzJgAacaEAGnQnQBq0qMAcdKjAHTUqAB2e8QAiI3KAJuf
        zgCdoM8Ao6fQAKeq0QCwstMAtduuAL/C1wDCxNgAzc/aANHS3gDR094A19jdANjZ3QDZ2t0A29vcAN3e
        3gDr6+sA6/XrAOv48QDv7/AA8/PzAPf3+AD+/v4A////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAArICQSFBQUFBQUFRUVFRUVFRUVemVlZWQTECIfPwAAHSElExQUFBQVFRUVFRUVFRUVfmRj
        KSkpO2J+ESIfJgAgJXJ3d3d3d3d3d3d3d3d3d0IoKCgoKCgoKChgUiIeICUTd3d3d3d3d3d3d3d3d3d+
        KCgoKH9/fi8oKCphESEjEhR3d19Qd3d3d3d3d3d3SSooKCgof39+LygoKCh+DxAUFHdqHiMLd3d3d3d3
        d3dJKCgoKCh/f34vKCgoKEkTFBQUdwEiaxQCd3d3d3d3fk9PKCgoKH9/fk4oKCgoOkAUFBR3SxJ0LRV3
        d3d3d3d+T09/f39/f39/f39/fz5CMhQUFXd3FBQKFRN3d3d3d35PT39/f39/f39/f39/PlM3FBQVd3d3
        BRUVFghvd3d3fk9Pf39/f39/f39/f38+QjYUFRV3d3d3d18WFhcXFxh7OlVWVl5ef39+UV1dVlUzeRQV
        FXd3d3d3d2kXMXBnNAczWFVWXV1/f35RVlZVWTUUFBUVd3d3d3d3dxcXd3d3d341W1dZVX9/fk1cWFtU
        fBUUFRV3d3d3d3d3aBhzd3duGW1bW1dYf39+TFdbWjkVFRQVFXd3d3d3d3d3GAl3dxoad204WlpaWlpa
        Wj1+dxUVFBUVd3d3d3d3d3csGHcIGnd3d344QVpaWlo4PHd3FRUUFRV3d3d3d3d3d3cYBBlQd3d3d3d2
        fH18eHd3d3cVFRQVFXd3d3d3d3d3dwwYGXd3d3d3d3d3d3d3d3d3dxUVFBUVd3d3d3d3d3d3Shgbd3d3
        d3d3d3d3d3d3d3d3FRUUFRV3d3d3d3d3d3cDGCd3d3d3d3d3d3d3d3d3d3cVFBQVFXd3d3d3d3d3dxcX
        GHd3d3d3d3d3d3d3d3d3dxUUFBQVd3d3d3d3d3d3Fw4Xd3d3d3d3d3d3d3d3d3d3FRQUFBV3d3d3d3d3
        d3cWbBdmd3d3d3d3d3d3d3d3d3cUFBQUFHd3d3d3d3d3dxZ3FgV3d3d3d3d3d3d3d3d3dxQUFBQUd3d3
        d3d3d3d3FQIGDXd3d3d3d3d3d3d3d3d3FBQQFBR3d3d3d3d3d3cuFRUGd3d3d3d3d3d3d3d3d3cUEyMS
        FHd3d3d3d3d3d3cwFXV3d3d3d3d3d3d3d3d3dxQPICUTd3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3
        ESEAICV3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3EiHgAdIUhFRkZGRkdHR0dHR0dHR0dHR0dHRkZG
        RkZEQx8cAAAdICQSFBQUFBQUFRUVFRUVFRUVFBQUFBQTECIfHAAAAAAAICIQExQUFBQUFBQUFBQUFBQU
        FBQUEiUhHQAAAMAAAAGAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACAAAAAgAAAAMAAAAHwAAAH
</value>
  </data>
</root>